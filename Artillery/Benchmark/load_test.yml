config:
  target: "{{ $processEnvironment.gateway_url }}"
  http:
    # Responses have to be sent within 10 seconds or the request will be aborted
    timeout: 10
  phases:
    - duration: 10
      arrivalRate: 1
    # - duration: 120
    #   arrivalRate: 10
    #   rampTo: 50
    #   name: "Warm up the application"
    # - duration: 600
    #   arrivalRate: 50
    #   name: "Sustained max load"
  payload:

  # This is how data is loaded from multiple csv files in same test script
  -
    path: "/home/alpine/output/created_users.csv"
    fields:
      - "username"
      - "password"
      - "session_token"
      - "deploy_token"
    order: sequence
    skipHeader: true
  -
    path: "/home/alpine/output/created_repository_ids.csv"
    fields:
      - "repo_id"
    order: sequence
    skipHeader: true
  -
    path: "/home/alpine/output/created_artifact_ids.csv"
    fields:
      - "artifact_id"
    order: sequence
    skipHeader: true
  -
    path: "/home/alpine/output/created_artifact_datas.csv"
    fields:
      - "artifact_name"
      - "version"
      - "description"
      - "repositoryName"
      - "organization"
      - "provider"
      - "runtime"
      - "handler"
      - "applicationToken"
      - "file"
    order: sequence
    skipHeader: true

### Endpoints to test against ###
  # List functions
  # Get function
  # Upload functions

scenarios:
  - name: List Artifacts
    flow:
      - get: # list artifacts
          url: "/repository/{{repo_id}}"
          cookie:
            authtoken: "{{session_token}}"

  - name: Get Artifact
    flow:
      - get: # get artifact
          url: "/artifact_download/{{artifact_id}}" # load from CSV
          # accourding to code for function the 'security' is implemented 
          #to get the id, not enforced on retrieval

  - name: Upload Artifact
    flow:
      - post: # upload function
          url: "/artifact"
          headers:
            Authorization: "{{ applicationToken }}"
            content-type: "application/json"
          json: 
            artifact_name: "{{ artifact_name }}"
            version: "{{ version }}"
            description: "{{ description }}"
            repositoryName: "{{ repositoryName }}"
            organization: "{{ organization }}"
            provider: "{{ provider }}"
            runtime: "{{ runtime }}"
            handler: "{{ handler }}"
            applicationToken: "{{ applicationToken }}"
            file: "{{ file }}"
